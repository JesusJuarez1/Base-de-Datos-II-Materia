--1.	Consultar los datos generales de todas las películas, su clasificación y las categorías a las que pertenece.
SELECT PELICULA_ID, NOMBRE_PELICULA, CLASIFICACION_ID CLASIFICACION, NOMBRE_CATEGORIA FROM PELICULAS_JMJP 
NATURAL JOIN PELICULA_CATEGORIAS_JMJP NATURAL JOIN CATEGORIAS_JMJP;

--2.	Consultar el nombre de las películas y el número de días que estarán en proyección.
SELECT PELICULA_ID,NOMBRE_PELICULA, CLASIFICACION_ID, CANTIDAD_DIAS FROM PELICULAS_JMJP NATURAL JOIN 
(SELECT PELICULA_ID,(FIN_PROYECCIONES-INICIO_PROYECCIONES)CANTIDAD_DIAS FROM PROYECCIONES_JMJP);

--3.	Consultar todas las películas y el nombre del cine en el que se estarán proyectando.
SELECT NOMBRE_PELICULA, NOMBRE_CINE FROM PELICULAS_JMJP NATURAL JOIN PROYECCIONES_JMJP NATURAL JOIN CINES_JMJP;

--4.	Mostrar todas las películas, su clasificación y descripción de dicha clasificación, así como la categoría y su descripción.
SELECT P.NOMBRE_PELICULA, C.CLASIFICACION_ID, C.DESCRIPCION DESC_CLASIFICACION, CA.NOMBRE_CATEGORIA, CA.DESCRIPCION DESC_CATEGORIA 
FROM PELICULAS_JMJP P JOIN CLASIFICACIONES_JMJP C ON(P.CLASIFICACION_ID=C.CLASIFICACION_ID) JOIN PELICULA_CATEGORIAS_JMJP PC ON(P.PELICULA_ID=PC.PELICULA_ID)
JOIN CATEGORIAS_JMJP CA ON(PC.CATEGORIA_ID=CA.CATEGORIA_ID);

--5.	Consultar las películas que se estarán proyectando en el año 2020.
SELECT NOMBRE_PELICULA,INICIO_PROYECCIONES,FIN_PROYECCIONES FROM PELICULAS_JMJP NATURAL JOIN PROYECCIONES_JMJP
WHERE TO_CHAR(INICIO_PROYECCIONES,'FMYYYY') = '2020';

--6.	Consultar el total que pago cada cliente y el método utilizado.
SELECT CLIENTE_ID,NOMBRE_CLIENTE,REF_PAGO_ID,TOTAL,METODO_PAGO FROM CLIENTES_JMJP NATURAL JOIN ENTRADAS_JMJP NATURAL JOIN REF_PAGOS_JMJP;

--7.	Consultar el nombre de la película que más dinero recaudo.
SELECT PELICULA_ID,NOMBRE_PELICULA FROM PELICULAS_JMJP NATURAL JOIN PROYECCIONES_JMJP WHERE PROYECCION_ID = (SELECT PROYECCION_ID 
FROM (SELECT E.PROYECCION_ID,SUM(RP.TOTAL)RECAUDADO FROM ENTRADAS_JMJP E NATURAL JOIN REF_PAGOS_JMJP RP GROUP BY E.PROYECCION_ID)
WHERE RECAUDADO = (SELECT MAX(SUM(RP.TOTAL)) FROM ENTRADAS_JMJP E NATURAL JOIN REF_PAGOS_JMJP RP GROUP BY E.PROYECCION_ID));

--8.	Consultar los nombres de las películas y lo que recaudaron.
SELECT PELICULA_ID,NOMBRE_PELICULA,RECAUDADO FROM PELICULAS_JMJP NATURAL JOIN PROYECCIONES_JMJP NATURAL JOIN (SELECT E.PROYECCION_ID,SUM(RP.TOTAL)RECAUDADO
FROM ENTRADAS_JMJP E NATURAL JOIN REF_PAGOS_JMJP RP GROUP BY E.PROYECCION_ID);

--9.	Consulta las fechas y horas de todas las funciones de la película llamada “Deadpool”.
SELECT DISTINCT TO_CHAR(INICIO_FUNCION,'DD/MM/YY HH:MI PM')INICIO_FUNCION,TO_CHAR(FIN_FUNCION,'DD/MM/YY HH:MI PM') FIN_FUNCION FROM FUNCIONES_JMJP 
NATURAL JOIN ENTRADAS_JMJP NATURAL JOIN PROYECCIONES_JMJP NATURAL JOIN PELICULAS_JMJP WHERE NOMBRE_PELICULA = 'DEADPOOL';

--10.	Consultar los datos generales del cine que menos ganancias a tenido.
SELECT CINE_ID,NOMBRE_CINE,GERENTE,DIRECCION,NUM_TEL FROM CINES_JMJP WHERE CINE_ID = (SELECT CINE_ID FROM 
(SELECT CINE_ID,SUM(TOTAL)GANANCIAS FROM PROYECCIONES_JMJP NATURAL JOIN ENTRADAS_JMJP NATURAL JOIN REF_PAGOS_JMJP GROUP BY CINE_ID) 
WHERE GANANCIAS = (SELECT MIN(SUM(TOTAL)) FROM PROYECCIONES_JMJP NATURAL JOIN ENTRADAS_JMJP NATURAL JOIN REF_PAGOS_JMJP GROUP BY CINE_ID));

--11.	Consultar las fechas y horas de funciones de la película ingresada por el usuario.
SELECT DISTINCT TO_CHAR(INICIO_FUNCION,'DD/MM/YY HH:MI PM')INICIO_FUNCION,TO_CHAR(FIN_FUNCION,'DD/MM/YY HH:MI PM') FIN_FUNCION FROM FUNCIONES_JMJP 
NATURAL JOIN ENTRADAS_JMJP NATURAL JOIN PROYECCIONES_JMJP NATURAL JOIN PELICULAS_JMJP WHERE NOMBRE_PELICULA = '&NOMBRE_PELICULA';

--12.	Consultar los datos generales del cine que más ganancias a tenido.
SELECT CINE_ID,NOMBRE_CINE,GERENTE,DIRECCION,NUM_TEL FROM CINES_JMJP WHERE CINE_ID = (SELECT CINE_ID FROM 
(SELECT CINE_ID,SUM(TOTAL)GANANCIAS FROM PROYECCIONES_JMJP NATURAL JOIN ENTRADAS_JMJP NATURAL JOIN REF_PAGOS_JMJP GROUP BY CINE_ID) 
WHERE GANANCIAS = (SELECT MAX(SUM(TOTAL)) FROM PROYECCIONES_JMJP NATURAL JOIN ENTRADAS_JMJP NATURAL JOIN REF_PAGOS_JMJP GROUP BY CINE_ID));

--13.	Consultar el nombre de la película que ha visto cada cliente.
SELECT NOMBRE_CLIENTE,NOMBRE_PELICULA FROM CLIENTES_JMJP NATURAL JOIN ENTRADAS_JMJP NATURAL JOIN PROYECCIONES_JMJP NATURAL JOIN PELICULAS_JMJP;

--14.	Consultar la sala en la que se estará proyectando cada película.
SELECT DISTINCT NOMBRE_PELICULA,NOMBRE_SALA,CAPACIDAD FROM PELICULAS_JMJP NATURAL JOIN PROYECCIONES_JMJP NATURAL JOIN ENTRADAS_JMJP NATURAL JOIN SALAS_JMJP;

--15.	Obtener los nombres de los clientes y el nombre del cine al que ingresaron.
SELECT NOMBRE_CLIENTE,NOMBRE_CINE FROM CLIENTES_JMJP NATURAL JOIN ENTRADAS_JMJP NATURAL JOIN PROYECCIONES_JMJP NATURAL JOIN CINES_JMJP;

--16.	Obtener el cliente que más ha gastado en cada cine.
SELECT NOMBRE_CINE,NOMBRE_CLIENTE FROM CLIENTES_JMJP NATURAL JOIN ENTRADAS_JMJP NATURAL JOIN PROYECCIONES_JMJP NATURAL JOIN CINES_JMJP 
WHERE CLIENTE_ID IN (SELECT CLIENTE_ID FROM CLIENTES_JMJP NATURAL JOIN ENTRADAS_JMJP NATURAL JOIN REF_PAGOS_JMJP WHERE
TOTAL IN (SELECT MAX(TOTAL) FROM REF_PAGOS_JMJP NATURAL JOIN ENTRADAS_JMJP NATURAL JOIN PROYECCIONES_JMJP NATURAL JOIN CINES_JMJP GROUP BY CINE_ID));

--17.	Consultar la película que menos a recaudado.
SELECT PELICULA_ID,NOMBRE_PELICULA,RECAUDADO FROM PELICULAS_JMJP NATURAL JOIN PROYECCIONES_JMJP NATURAL JOIN 
(SELECT E.PROYECCION_ID,SUM(RP.TOTAL)RECAUDADO FROM ENTRADAS_JMJP E NATURAL JOIN REF_PAGOS_JMJP RP GROUP BY E.PROYECCION_ID)PR
WHERE RECAUDADO = (SELECT MIN(SUM(RP.TOTAL))RECAUDADO FROM ENTRADAS_JMJP E NATURAL JOIN REF_PAGOS_JMJP RP GROUP BY E.PROYECCION_ID);

--18.	Consultar las salas a las que ha entrado cada cliente.
SELECT SALA_ID,NOMBRE_SALA,CLIENTE_ID,NOMBRE_CLIENTE FROM CLIENTES_JMJP NATURAL JOIN ENTRADAS_JMJP NATURAL JOIN SALAS_JMJP;

--19.	Consultar las películas y el número de vistas que han tenido.
SELECT NOMBRE_PELICULA,COUNT(CLIENTE_ID)NUM_VISTAS FROM PELICULAS_JMJP 
NATURAL JOIN PROYECCIONES_JMJP NATURAL JOIN ENTRADAS_JMJP GROUP BY NOMBRE_PELICULA;

--20.	Consultar los cines en los cuales se esté proyectando alguna película, así como sus fechas de proyección.
SELECT NOMBRE_CINE,NOMBRE_PELICULA,INICIO_PROYECCIONES,FIN_PROYECCIONES FROM CINES_JMJP NATURAL JOIN PROYECCIONES_JMJP NATURAL JOIN PELICULAS_JMJP;

--21.	Consultar la categoría más recurrente en las películas.
SELECT NOMBRE_CATEGORIA FROM CATEGORIAS_JMJP WHERE CATEGORIA_ID = (SELECT CATEGORIA_ID FROM 
(SELECT CATEGORIA_ID,COUNT(*)NUMERO FROM PELICULA_CATEGORIAS_JMJP GROUP BY CATEGORIA_ID 
HAVING COUNT(*) = (SELECT MAX(COUNT(*)) FROM PELICULA_CATEGORIAS_JMJP GROUP BY CATEGORIA_ID)));

--22.	Consultar la clasificación más recurrente en las películas.
SELECT CLASIFICACION_ID,DESCRIPCION FROM CLASIFICACIONES_JMJP NATURAL JOIN 
(SELECT CLASIFICACION_ID,COUNT(*)NUMERO FROM PELICULAS_JMJP GROUP BY CLASIFICACION_ID)
WHERE NUMERO = (SELECT MAX(COUNT(*)) FROM PELICULAS_JMJP GROUP BY CLASIFICACION_ID);

--23.	Consultar la película más vista.
SELECT NOMBRE_PELICULA,NUM_VISTAS FROM PELICULAS_JMJP NATURAL JOIN 
(SELECT PELICULA_ID,COUNT(CLIENTE_ID)NUM_VISTAS FROM PROYECCIONES_JMJP NATURAL JOIN ENTRADAS_JMJP GROUP BY PELICULA_ID)
WHERE NUM_VISTAS = (SELECT MAX(COUNT(CLIENTE_ID))NUM_VISTAS FROM PROYECCIONES_JMJP NATURAL JOIN ENTRADAS_JMJP GROUP BY PELICULA_ID);

--24.	Consultar el promedio que gastan los clientes por cada película.
SELECT NOMBRE_PELICULA,AVG(TOTAL)PROMEDIO FROM PELICULAS_JMJP NATURAL JOIN PROYECCIONES_JMJP NATURAL JOIN ENTRADAS_JMJP NATURAL JOIN REF_PAGOS_JMJP
GROUP BY NOMBRE_PELICULA;

--25.	Consultar las películas, el cine en el que se proyectaran, las fechas de proyección, y las funciones que esta tendrá.
SELECT DISTINCT P.NOMBRE_PELICULA,P.CLASIFICACION_ID,C.NOMBRE_CINE,PR.INICIO_PROYECCIONES,PR.FIN_PROYECCIONES,F.INICIO_FUNCION,F.FIN_FUNCION FROM PELICULAS_JMJP P
JOIN PROYECCIONES_JMJP PR ON(P.PELICULA_ID=PR.PELICULA_ID) JOIN CINES_JMJP C ON(PR.CINE_ID=C.CINE_ID) JOIN ENTRADAS_JMJP E ON(PR.PROYECCION_ID=E.PROYECCION_ID)
JOIN FUNCIONES_JMJP F ON(E.FUNCION_ID=F.FUNCION_ID);


